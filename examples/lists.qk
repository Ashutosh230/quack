open fn prelude.{ filter; reduce; union }

let map :- fn { f; xss |
  { } when xs = { }
      else f[ head[ xss ] ] ++ tail[ xss ]
}

let my_list :- 1 .. 100

do my_list
|> map[ &(* 2 ) ]
|> union[ { 10; 20; 30 } ]
|> filter[ fn { x | x mod 2 = 0 } ]
|> reduce[ &(+) ]
|> write!
