
-: imperative
def fact [n] [
  let i: int
  let fact: int :- 1
  for i :- 1 while i <= n do [
    fact :- fact * i
  ]
  <<< fact
]

-: tail_call_recursion
def fact [n] [
  <<< if n = 0 then 1 else [n * fact[n - 1]]
]

-: compressed
def fact! if &(= 0) then 1 else &(* fact[&0 - 1])

