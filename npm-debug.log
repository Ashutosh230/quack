0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', '-g', 'php-pegjs' ]
2 info using npm@1.3.10
3 info using node@v0.10.25
4 verbose cache add [ 'php-pegjs', null ]
5 verbose cache add name=undefined spec="php-pegjs" args=["php-pegjs",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'php-pegjs',
6 verbose parsed url   path: 'php-pegjs',
6 verbose parsed url   href: 'php-pegjs' }
7 silly lockFile f2c4be66-php-pegjs php-pegjs
8 verbose lock php-pegjs /home/haskell/.npm/f2c4be66-php-pegjs.lock
9 silly lockFile f2c4be66-php-pegjs php-pegjs
10 silly lockFile f2c4be66-php-pegjs php-pegjs
11 verbose addNamed [ 'php-pegjs', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile d21f9f1b-php-pegjs php-pegjs@
14 verbose lock php-pegjs@ /home/haskell/.npm/d21f9f1b-php-pegjs.lock
15 silly addNameRange { name: 'php-pegjs', range: '*', hasData: false }
16 verbose url raw php-pegjs
17 verbose url resolving [ 'https://registry.npmjs.org/', './php-pegjs' ]
18 verbose url resolved https://registry.npmjs.org/php-pegjs
19 info trying registry request attempt 1 at 01:25:54
20 verbose etag "C2FTIC8IOQZN97NZ3I618R1P3"
21 http GET https://registry.npmjs.org/php-pegjs
22 http 304 https://registry.npmjs.org/php-pegjs
23 silly registry.get cb [ 304,
23 silly registry.get   { date: 'Sat, 03 Oct 2015 04:25:56 GMT',
23 silly registry.get     via: '1.1 varnish',
23 silly registry.get     'cache-control': 'max-age=60',
23 silly registry.get     etag: '"C2FTIC8IOQZN97NZ3I618R1P3"',
23 silly registry.get     age: '0',
23 silly registry.get     connection: 'keep-alive',
23 silly registry.get     'x-served-by': 'cache-jfk1026-JFK',
23 silly registry.get     'x-cache': 'HIT',
23 silly registry.get     'x-cache-hits': '1',
23 silly registry.get     'x-timer': 'S1443846356.063529,VS0,VE17',
23 silly registry.get     vary: 'Accept' } ]
24 verbose etag php-pegjs from cache
25 silly addNameRange number 2 { name: 'php-pegjs', range: '*', hasData: true }
26 silly addNameRange versions [ 'php-pegjs',
26 silly addNameRange   [ '0.8.0',
26 silly addNameRange     '0.8.1',
26 silly addNameRange     '0.8.2',
26 silly addNameRange     '0.8.3',
26 silly addNameRange     '0.8.4',
26 silly addNameRange     '0.8.5',
26 silly addNameRange     '0.8.6',
26 silly addNameRange     '0.8.7' ] ]
27 verbose addNamed [ 'php-pegjs', '0.8.7' ]
28 verbose addNamed [ '0.8.7', '0.8.7' ]
29 silly lockFile 5c70e0ea-php-pegjs-0-8-7 php-pegjs@0.8.7
30 verbose lock php-pegjs@0.8.7 /home/haskell/.npm/5c70e0ea-php-pegjs-0-8-7.lock
31 silly lockFile 5c70e0ea-php-pegjs-0-8-7 php-pegjs@0.8.7
32 silly lockFile 5c70e0ea-php-pegjs-0-8-7 php-pegjs@0.8.7
33 silly lockFile d21f9f1b-php-pegjs php-pegjs@
34 silly lockFile d21f9f1b-php-pegjs php-pegjs@
35 silly resolved [ { name: 'php-pegjs',
35 silly resolved     version: '0.8.7',
35 silly resolved     description: 'PHP target for PEG.js parser generator',
35 silly resolved     main: 'src/phppegjs.js',
35 silly resolved     files:
35 silly resolved      [ 'LICENSE',
35 silly resolved        'README.md',
35 silly resolved        'examples/arithmetics.pegjs',
35 silly resolved        'examples/css.pegjs',
35 silly resolved        'examples/javascript.pegjs',
35 silly resolved        'examples/json.pegjs',
35 silly resolved        'examples/digits.pegjs',
35 silly resolved        'src/phppegjs.js',
35 silly resolved        'src/passes/generate-bytecode-php.js',
35 silly resolved        'src/passes/generate-php.js',
35 silly resolved        'test/README',
35 silly resolved        'test/test.js',
35 silly resolved        'test/test_index.php' ],
35 silly resolved     peerDependencies: { pegjs: '~0.8.0' },
35 silly resolved     devDependencies: {},
35 silly resolved     scripts: { test: 'echo "Error: no test specified" && exit 1' },
35 silly resolved     repository: { type: 'git', url: 'https://github.com/Nordth/php-pegjs.git' },
35 silly resolved     keywords: [ 'pegjs', 'plugin', 'php', 'parser', 'generator' ],
35 silly resolved     author: { name: 'Elantcev Mikhail' },
35 silly resolved     license: 'MIT',
35 silly resolved     bugs: { url: 'https://github.com/Nordth/php-pegjs/issues' },
35 silly resolved     readme: 'PHP PEG.js\r\n======\r\n\r\nPHP PEG.js is a php code generation plugin for \r\n[PEG.js](https://github.com/dmajda/pegjs).\r\n\r\n## Requirements\r\n\r\n* [PEG.js](http://pegjs.majda.cz/) \r\n\r\nInstallation\r\n------------\r\n\r\n### Node.js\r\n\r\nInstall PEG.js with php-pegjs plugin\r\n\r\n    $ npm install php-pegjs\r\n\r\nUsage\r\n-----\r\n\r\n### Generating a Parser\r\n\r\nIn Node.js, require both the PEG.js parser generator and the php-pegjs plugin:\r\n\r\n    var pegjs = require("pegjs");\r\n    var phppegjs = require("php-pegjs");\r\n\r\nTo generate a php parser, pass to `pegjs.buildParser` php-pegjs plugin and your grammar:\r\n\r\n    var parser = pegjs.buildParser("start = (\'a\' / \'b\')+", {\r\n        plugins: [phppegjs]\r\n    });\r\n\r\n\r\nThe method will return source code of generated parser as a string. Unlike original PEG.js, generated php parser will be a class, not a function.\r\n\r\nSupported options of `pegjs.buildParser`:\r\n\r\n  * `cache` — if `true`, makes the parser cache results, avoiding exponential\r\n    parsing time in pathological cases but making the parser slower (default:\r\n    `false`). In case of php, this is strongly recommended for big grammars\r\n    (like javascript.pegjs or css.pegjs in example folder)\r\n  * `allowedStartRules` — rules the parser will be allowed to start parsing from\r\n    (default: the first rule in the grammar)\r\n\r\nAdditional PHP PEG.js plugin options:  \r\n\r\n  * `phppegjs.parserNamespace` - namespace of generated parser (default: `"PhpPegJs"`). If value is `""`, parser will be in global namespace\r\n  * `phppegjs.parserClassName` - name of generated class for parser (default: `"Parser"`)\r\n\r\nUsing the Parser\r\n----------------\r\n\r\n1) Save parser generated by `pegjs.buildParser` to a file\r\n\r\n2) In php code:\r\n\r\n    include "your.parser.file.php";\r\n    \r\n    try\r\n    {\r\n        $parser = new PhpPegJs\\Parser;\r\n        $result = $parser->parse($input);\r\n    }\r\n    catch (PhpPegJs\\SyntaxError $ex)\r\n    {\r\n        // Handle parsing error\r\n        // [...]\r\n    }\r\n\r\nYou can use following snippet to format parsing error:\r\n\r\n    catch (PhpPegJs\\SyntaxError $ex)\r\n    {\r\n        $message = "Syntax error: " . $ex->getMessage() . \' At line \' . $ex->grammarLine . \' column \' . $ex->grammarColumn . \' offset \' . $ex->grammarOffset;\r\n    }\r\n\r\nGrammar Syntax and Semantics\r\n----------------------------\r\n\r\nSee documentation of [PEG.js](https://github.com/dmajda/pegjs#grammar-syntax-and-semantics) with one difference: action blocks should be written on PHP.\r\n\r\nOriginal PEG.js rule:\r\n\r\n    media_list\r\n      = head:medium tail:("," S* medium)* {\r\n          var result = [head];\r\n          for (var i = 0; i < tail.length; i++) {\r\n            result.push(tail[i][2]);\r\n          }\r\n          return result;\r\n        }\r\n        \r\nPHP PEG.js rule:\r\n\r\n    media_list\r\n      = head:medium tail:("," S* medium)* {\r\n          $result = array($head);\r\n          for ($i = 0; $i < count($tail); $i++) {\r\n            $result[] = $tail[$i][2];\r\n          }\r\n          return $result;\r\n        }\r\n        \r\nYou can also use following util functions in action blocks:\r\n\r\n`chr_unicode($code)` - return character by its UTF-8 code (Analogue of javascript  String.fromCharCode)\r\n\r\nGuide of converting PEG.js action blocks to PHP PEG.js\r\n------------------------------------------------------\r\n\r\n| Javascript code                   | PHP analogue                              | \r\n| --------------------------------- | ----------------------------------------- |\r\n| `some_var`                        | `$some_var`                               |\r\n| `{f1: "val1", f2: "val2"]`        | `array("val1", "val2")`                   |\r\n| `["val1", "val2"]`                | `array("f1" => "val1", "f2" => "val2")`   |\r\n| `some_array.push("val")`          | `$some_array[] = "val"`                   |\r\n| `some_array.length`               | `count($some_array)`                      |\r\n| `some_array.join("")`             | `join("", $some_array)`                   |\r\n| `some_array1.concat(some_array2)` | `array_merge($some_array1, $some_array2)` |\r\n| `parseInt("23")`                  | `intval("23")`                            |\r\n| `parseFloat("23.1")`              | `floatval("23.1")`                        |\r\n| `some_str.length`                 | `mb_strlen(some_str, "UTF-8")`            |\r\n| `some_str.replace("b", "\\b")`     | `str_replace("b", "\\b", $some_str)`       |\r\n| `String.fromCharCode(2323)`       | `chr_unicode(2323)`                       |\r\n\r\nLicense\r\n-------\r\n\r\n[The MIT License (MIT)](http://opensource.org/licenses/MIT)',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     _id: 'php-pegjs@0.8.7',
35 silly resolved     _from: 'php-pegjs@' } ]
36 info install php-pegjs@0.8.7 into /usr/local/lib
37 info installOne php-pegjs@0.8.7
38 info /usr/local/lib/node_modules/php-pegjs unbuild
39 info preuninstall php-pegjs@0.8.7
40 info uninstall php-pegjs@0.8.7
41 verbose true,/usr/local/lib/node_modules,/usr/local/lib/node_modules unbuild php-pegjs@0.8.7
42 info postuninstall php-pegjs@0.8.7
43 verbose tar unpack /home/haskell/.npm/php-pegjs/0.8.7/package.tgz
44 silly lockFile eed64d9c-local-lib-node-modules-php-pegjs tar:///usr/local/lib/node_modules/php-pegjs
45 verbose lock tar:///usr/local/lib/node_modules/php-pegjs /home/haskell/.npm/eed64d9c-local-lib-node-modules-php-pegjs.lock
46 silly lockFile d0d8e33d--npm-php-pegjs-0-8-7-package-tgz tar:///home/haskell/.npm/php-pegjs/0.8.7/package.tgz
47 verbose lock tar:///home/haskell/.npm/php-pegjs/0.8.7/package.tgz /home/haskell/.npm/d0d8e33d--npm-php-pegjs-0-8-7-package-tgz.lock
48 silly gunzTarPerm modes [ '755', '644' ]
49 silly gunzTarPerm extractEntry package.json
50 silly gunzTarPerm extractEntry README.md
51 silly gunzTarPerm extractEntry LICENSE
52 silly gunzTarPerm extractEntry examples/arithmetics.pegjs
53 silly gunzTarPerm extractEntry examples/css.pegjs
54 silly gunzTarPerm extractEntry examples/digits.pegjs
55 silly gunzTarPerm extractEntry examples/javascript.pegjs
56 silly gunzTarPerm extractEntry examples/json.pegjs
57 silly gunzTarPerm extractEntry src/phppegjs.js
58 silly gunzTarPerm extractEntry src/passes/generate-bytecode-php.js
59 silly gunzTarPerm extractEntry src/passes/generate-php.js
60 silly gunzTarPerm extractEntry test/README
61 silly gunzTarPerm extractEntry test/test.js
62 silly gunzTarPerm extractEntry test/test_index.php
63 silly lockFile eed64d9c-local-lib-node-modules-php-pegjs tar:///usr/local/lib/node_modules/php-pegjs
64 silly lockFile eed64d9c-local-lib-node-modules-php-pegjs tar:///usr/local/lib/node_modules/php-pegjs
65 silly lockFile d0d8e33d--npm-php-pegjs-0-8-7-package-tgz tar:///home/haskell/.npm/php-pegjs/0.8.7/package.tgz
66 silly lockFile d0d8e33d--npm-php-pegjs-0-8-7-package-tgz tar:///home/haskell/.npm/php-pegjs/0.8.7/package.tgz
67 info preinstall php-pegjs@0.8.7
68 verbose readDependencies using package.json deps
69 verbose readDependencies using package.json deps
70 silly resolved []
71 verbose about to build /usr/local/lib/node_modules/php-pegjs
72 info build /usr/local/lib/node_modules/php-pegjs
73 verbose linkStuff [ true,
73 verbose linkStuff   '/usr/local/lib/node_modules',
73 verbose linkStuff   true,
73 verbose linkStuff   '/usr/local/lib/node_modules' ]
74 info linkStuff php-pegjs@0.8.7
75 verbose linkBins php-pegjs@0.8.7
76 verbose linkMans php-pegjs@0.8.7
77 verbose rebuildBundles php-pegjs@0.8.7
78 info install php-pegjs@0.8.7
79 info postinstall php-pegjs@0.8.7
80 warn package.json sass@0.5.0 No repository field.
81 verbose already installed skipping pegjs@~0.8.0 /usr/local/lib
82 silly resolved []
83 error peerinvalid The package pegjs does not satisfy its siblings' peerDependencies requirements!
83 error peerinvalid Peer php-pegjs@0.8.7 wants pegjs@~0.8.0
84 error System Linux 3.19.0-30-generic
85 error command "/usr/bin/nodejs" "/usr/bin/npm" "install" "-g" "php-pegjs"
86 error cwd /home/haskell/Documents/urano
87 error node -v v0.10.25
88 error npm -v 1.3.10
89 error code EPEERINVALID
90 verbose exit [ 1, true ]
