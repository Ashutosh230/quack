%%command
php ./src/Main.php %s
%%describe
Local type inference
%%source
let name :: string :- 'lorem ipsum dolor sit' + 'l'
let age :: number :- 10
let bool :: Bool :- True and False
let email :: regex :- &/.@./
let atom :: @GET :- @GET
let people :: {%{name: string, age: number}} :- { %{
  name: 'Celao',
  age: 20
}, %{
  name: 'Jaca',
  age: 99
} }
let add :: &[number, number]: number :- &[a :: number, b :: number]: a + b
do add(10, age)
let id :- &[x]: x
let fact :: &[number]: number :- &[n :: number]: n = 0 then 1 else n * fact(n - 1)
let request :: atom :- @POST
let intersect :: %{x: number} & %{y: string} & %{z: Bool} :- %{
  x: 1,
  y: 'foo',
  z: True
}
let my_list :: {%{name: string} & %{age: number}} :- { %{
  name: 'Celao',
  age: 20
} }
type Person :- %{ name: string, age: number }
let marcelo :: Person :- %{ name: 'Marcelo', age: 20 }
let salete :- %{ name: 'Salete', age: 33 }
let programmer :: Person :- salete
%%expect
string(6) "number"
let name :: string :- 'lorem ipsum dolor sit' + 'l'
let age :: number :- 10
let bool :: Bool :- True and False
let email :: regex :- &/.@./
let atom :: @GET :- @GET
let people :: {%{name: string, age: number}} :- { %{
  name: 'Celao',
  age: 20
}, %{
  name: 'Jaca',
  age: 99
} }
let add :: &[number, number]: number :- &[a :: number, b :: number]: a + b
do add(10, age)
let id :- &[x]: x
let fact :: &[number]: number :- &[n :: number]: n = 0 then 1 else n * fact(n - 1)
let request :: atom :- @POST
let intersect :: %{x: number} & %{y: string} & %{z: Bool} :- %{
  x: 1,
  y: 'foo',
  z: True
}
let my_list :: {%{name: string} & %{age: number}} :- { %{
  name: 'Celao',
  age: 20
} }
type Person :- %{name: string, age: number}
let marcelo :: Person :- %{
  name: 'Marcelo',
  age: 20
}
let salete :- %{
  name: 'Salete',
  age: 33
}
let programmer :: Person :- salete

